类变量被所有的对象所共享，也叫静态变量

类变量可以通过类名来直接访问

定义类变量：
访问修饰符 static 数据类型 变量名；

如何访问类变量：
    类名.类变量名
    对象名.类变量名

当我们需要让某个类的所有对象都共享一个对象时，我们就可以使用类变量
类变量是该类所有对象共享的，而实例变量是每个对象独享的

加上static称为类变量或静态变量，否则称为实例变量/普通变量

实例变量不能通过  类名.变量名 方式访问
类变量是在类加载时就初始化了，也就是说，即使你没有创建对象，只要类加载了，就可以使用类变量了。

类变量的生命周期是随类的加载开始，随着类的销亡而销毁。

当方法中不涉及到任何和对象相关的成员，则可以将方法设计成静态方法，提高开发效率。
在工具类中，几乎都是静态类，
public static double sin(double a) {
    return StrictMath.sin(a); // default impl. delegates to StrictMath
}
类方法不能使用this和super
类方法中只能访问静态变量和静态方法


类方法也叫静态方法（使用static修饰就是静态方法，就可以访问静态属性）
访问修饰符 static 数据返回类型  方法名（）{}

使用方法： 类名.类方法名  或者  对象名.类方法名