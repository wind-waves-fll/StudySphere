程序：是为了完成特定任务，用某种语言编写的一组指令的集合
      简单的说：就是我们写的代码
进程：
1. 进程是指运行中的程序，QQ，微信都是一个进程。操作系统会为
    进程分配内存空间，
2. 进程是程序的一次执行过程，或是正在运行的一个程序。
    是动态过程：有它自身的产生、存在和消亡的过程。

线程：
1. 线程是由进程创建的，是进程的一个实体
2. 一个进程可以拥有多个线程

单线程和多线程：
1. 单线程：同一时刻，只允许执行一个线程
2. 多线程：同一时刻，可以执行多个线程
3. 并发：同一时刻，多个任务交替执行，造成一种貌似同时的错觉，简单来说，单核cpu实现的多任务就是并发
4. 并行：同一时刻，多个任务同时执行，多核cpu可以实现并行

线程的基本使用：
使用JConsole监控线程执行情况，并画出程序示意图

1. java是单继承的，在某些情况下一个类可能已经继承了某个父类，
    这是在用继承Thread类方法来创建线程显然不可能了
2. java的设计者们提供了另外一种方式来创建线程，就是通过实现了Runnable接口来创建线程
    public class Thread implements Runnable 

    Thread thread = new Thread(dog);//这里底层使用了设计模式[代理模式]
    thread.start();
    class Dog implements Runnable{
        ...
    }
3. 继承Thread vs 实现Runnable的区别
    从java的设计来看，没有区别
    实现Runnable接口方式更加适合多个线程共享一个资源的情况，并且避免了单继承的限制

多个线程售票问题：容易超卖

线程终止：
1. 线程完成任务后，就退出了
2. 还可以通过使用变量来控制run方法推出的方式来停止线程，即通知方式

T t = new T();
t.start();
Thread.sleep(100000);
t.setLoop(false);//通知线程退出


class T extends Thread{
    private  int times = 0;
    private boolean loop = true;

    public void setLoop(boolean loop) {
        this.loop = loop;
    }

    @Override
    public void run() {
        while (loop) {

        }
    }
}