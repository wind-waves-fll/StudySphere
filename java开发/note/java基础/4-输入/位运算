原码：
反码：
补码：

二进制的最高位是符号位。0表示正数，1表示负数
正数的原码、反码、补码都一样
负数的反码 = 它的符号位不变，其他位取反
负数的补码 = 它的反码 + 1
0的反码补码都是0
java没有无符号数，所有数都是有符号的

计算机运算时，都是以补码的方式计算的，而当我们看运算结果时，要看它的原码。
正数的三码都一样，负数先由补码-1得到反码，反码符号位不变，其他位取反得到原码。


位运算符：
    按位与&       两个全为1，结果为1，否则为0
    按位或|       两个有一个为1，结果为1，否则为0
    按位异或^     两个一个为0，一个为1，结果为1，否则为0
    按位取反~     1->0  0->1
    
    算术右移>>    低位溢出，符号位不变，并用符号位补溢出的高位 
    算术左移<<    符号位不变，低位补0 
    逻辑右移>>>   也叫无符号右移，低位溢出，高位补0
    注意：没有逻辑左移<<<